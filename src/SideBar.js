import { useState, useEffect, useContext } from 'react';
import { Link, useLocation, useNavigate} from 'react-router-dom';
import { AppContext } from './AppContext';


const SideBar = () => {

    const location = useLocation();
    const navigate = useNavigate();

    const { content, allCrops } = useContext(AppContext);
    const [currentCrop, setCurrentCrop] = useState('abe');
    const [currentYear, setCurrentYear] = useState('2022-2023');

 



   
    useEffect(() => {

        let crop = location.pathname.split('/')[1];

        let period = location.pathname.split('/')[2];

        let country = location.pathname.split('/')[3];

        if (crop && period && country) {

            let currentItems = allCrops.filter(c => c.slug == currentCrop)[0]?.periods.filter(p => p.period == currentYear)[0];

            let currentSlugs = currentItems?.countries.map(c => c.slug);

            let currentLinks = currentSlugs?.map(s => `/${currentCrop}/${currentYear}/${s}`);

            if(currentLinks?.includes(`/${currentCrop}/${currentYear}/${country}`)) {
                navigate(`/${currentCrop}/${currentYear}/${country}`);
            }
           

        }

        const cropPeriods = allCrops.find(c => c.slug === currentCrop)?.periods.map(p => p.period);
        if (cropPeriods && !cropPeriods.includes(currentYear)) {
            setCurrentYear(cropPeriods[0]);
        }



    }, [currentCrop, currentYear]);





    return (
        <>
            <div data-animation="default" data-collapse="medium" data-duration="400" data-easing="ease" data-easing2="ease" role="banner" className="dashboard-nav w-nav">
                <div className="nav-brand">
                    <a href="/" aria-current="page" className="dashboard-nav_logo w-nav-brand w--current"><img src="/assets/images/peri-farms-logo-205px.png" loading="lazy" alt="" className="dashboard-logo_image" /></a>
                    <h1 className="nav-title">Impact Dashboard</h1>
                </div>
                <nav role="navigation" className={`countrypage-content main-nav_menu w-nav-menu`}>
                    <a href="/" aria-current="page" className={`button is-main-nav w-inline-block ${location.pathname == '/' && 'w--current'}`}>
                        <div className="button-text">Introduction</div>
                        <div className="button-bg"></div>
                    </a>
                    <div className="divider is-narrow"></div>

                    {
                        allCrops?.length > 0 &&

                        <>

                            <div className="year-select_wrap">
                                <div className="button-text">Crop:</div>
                                <select onChange={e => setCurrentCrop(e.target.value)} className="sidebar-menu-select">
                                    {
                                        allCrops.map((c, index) => {
                                            return (
                                                <option key={index} value={c.slug} >{c.short_name}</option>
                                            )
                                        })
                                    }
                                </select>
                            </div>
                            <div className="year-select_wrap">
                                <div className="button-text">Year:</div>
                                <select onChange={e => setCurrentYear(e.target.value)} className="sidebar-menu-select">
                                    {
                                        allCrops.find(c => c.slug == currentCrop)?.periods.map((p, index) => {
                                            return (
                                                <option key={index} value={p.period}>{p.period}</option>
                                            )
                                        })
                                    }
                                </select>
                            </div>





                            <div className="menu_label">{allCrops.find(c => c.slug == currentCrop).short_name} Producing Countries:</div>

                            {
                                allCrops.find((c) => c.slug === currentCrop)
                                    ?.periods.find((p) => p.period === currentYear)
                                    ?.countries.map((country, index) => (
                                        <Link
                                            key={index}
                                            to={`/${currentCrop}/${currentYear}/${country.slug}`}
                                            className={`button is-main-nav w-inline-block ${location.pathname.includes(country.slug) && 'w--current'}`}
                                        >
                                            <img
                                                src={`/assets/images/${country.slug}.svg`}
                                                loading="lazy"
                                                alt=""
                                                className="button-flag"
                                            />
                                            <div className="button-text">{country.country}</div>
                                            <div className="button-bg is-green"></div>
                                        </Link>
                                    ))
                            }
                            {
                                allCrops.find((c) => c.slug === currentCrop)?.periods.find((p) => p.period === currentYear)?.comparisons &&

                                <Link
                                    to={`/${currentCrop}/${currentYear}/comparisons`}
                                    className={`button is-main-nav w-inline-block ${location.pathname.includes('comparison') && 'w--current'}`}
                                >
                                    <div className="button-text">Country Comparisons</div>
                                    <div className="button-bg is-green"></div>
                                </Link>
                            }
                            
                            <div className="main-nav_shadow"></div>

                        </>
                    }
                </nav>
                <div className="menu-button w-nav-button">
                    <div className="menu-button_icons">
                        <div className="menu-close w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="65" height="66" viewBox="0 0 65 66" fill="none">
                            <path fillRule="evenodd" clipRule="evenodd" d="M5.69113 0.827637C4.68986 1.28532 3.77789 1.699 2.64442 2.20961L2.65008 2.21528C2.79678 2.61977 2.91636 3.04492 3.03736 3.47513C3.30915 4.44148 3.58811 5.43328 4.19765 6.27343C5.3597 7.86814 6.34125 9.50589 7.31993 11.1388C8.04991 12.3568 8.7783 13.5722 9.5788 14.765C11.6061 17.7772 13.2613 20.7878 14.7495 23.9201C15.8771 26.2918 17.4028 28.6618 18.9825 31.0117C19.4044 31.6384 19.8401 32.2571 20.2866 32.8696C19.3145 33.591 18.3296 34.2888 17.3247 34.9505C17.0924 35.1049 16.8807 35.3263 16.6709 35.5458C16.5891 35.6313 16.5076 35.7165 16.4253 35.7973C15.8836 36.3267 15.3695 36.8776 14.8548 37.4291C13.971 38.3762 13.0855 39.325 12.0558 40.1699C11.1622 40.8989 10.3989 41.7679 9.62642 42.6474C8.95471 43.4122 8.27597 44.185 7.49836 44.8807C6.14615 46.0918 4.60134 47.9387 4.25415 49.3265C3.87635 50.8406 3.21611 52.3318 2.55996 53.8138C2.04374 54.9797 1.53005 56.1399 1.15841 57.3011C1.03992 57.6708 0.90088 58.049 0.761052 58.4294C0.124962 60.1596 -0.527501 61.9344 0.663494 63.1529C1.10851 62.9918 1.55809 62.8245 2.01051 62.6561C3.1539 62.2305 4.31548 61.7981 5.4677 61.4425C6.46586 61.1351 7.45559 60.8918 8.44627 60.6482C9.06096 60.4971 9.676 60.3459 10.2937 60.1792C14.5293 59.0419 19.8265 56.4813 22.8617 54.166C25.8028 51.926 28.7344 49.6571 31.6102 47.3037C31.7342 47.4833 31.8572 47.6636 31.979 47.8445C32.1373 48.0774 32.3632 48.2896 32.5871 48.5001C32.6744 48.5821 32.7613 48.6638 32.8438 48.7463C33.3843 49.2895 33.9463 49.805 34.5089 50.3211C35.4749 51.2074 36.4428 52.0953 37.3069 53.1278C38.0524 54.0239 38.9384 54.7892 39.8352 55.5639C40.615 56.2374 41.4029 56.918 42.1138 57.6978C43.3512 59.0537 45.2335 60.6028 46.6407 60.9509C48.176 61.3298 49.6906 61.9918 51.1958 62.6498C52.38 63.1674 53.5584 63.6825 54.7365 64.0552C55.1116 64.174 55.4955 64.3134 55.8815 64.4537C57.6378 65.0915 59.4392 65.7458 60.6613 64.5515C60.4943 64.1052 60.3209 63.6544 60.1465 63.2007C59.7056 62.0542 59.2578 60.8895 58.8877 59.7341C58.5678 58.7332 58.3127 57.7408 58.0574 56.7474C57.899 56.131 57.7405 55.5143 57.5663 54.8949C56.3777 50.6477 53.7395 45.336 51.3698 42.2924C49.0624 39.3242 46.7254 36.3656 44.302 33.4641C45.6417 31.6816 47.1168 29.9732 48.5898 28.2673C50.6328 25.9011 52.6719 23.5395 54.3404 20.9909C56.0354 18.4034 58.2025 16.2879 60.3615 14.1804C60.6177 13.9303 60.8739 13.6802 61.1291 13.4295C62.4956 12.0872 63.6298 10.8707 64.2128 9.38299C63.7564 8.38926 63.3438 7.48419 62.8346 6.35931L62.8289 6.36486C62.4256 6.50628 62.0016 6.62071 61.5725 6.7365C60.6088 6.9966 59.6197 7.26355 58.7819 7.85861C57.1915 8.99309 55.5583 9.94878 53.9298 10.9017C52.7151 11.6124 51.5031 12.3216 50.3135 13.1023C47.3096 15.0794 44.3073 16.6889 41.1836 18.1321C38.8183 19.2257 36.4548 20.7128 34.1113 22.2534C33.7255 22.5074 33.3427 22.7666 32.9626 23.0304C32.8428 22.8698 32.7402 22.6837 32.66 22.4643C29.9394 20.7423 27.4356 18.6158 24.9368 16.4936C22.5246 14.445 20.117 12.4003 17.5236 10.7272C14.8905 9.02757 12.7309 6.85451 10.5793 4.68957C10.3239 4.43261 10.0687 4.17577 9.81274 3.91985C8.44246 2.54956 7.20152 1.41231 5.69113 0.827637Z" fill="currentcolor"></path>
                        </svg></div>
                        <div className="menu-open w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 64 64" fill="none">
                            <path fillRule="evenodd" clipRule="evenodd" d="M60.8107 7.79297C60.5563 8.84925 60.3531 9.70081 60.1319 10.6378C59.1097 11.2906 57.915 11.4349 56.534 11.526C56.276 11.543 56.0179 11.559 55.7597 11.575C53.584 11.7101 51.4002 11.8456 49.2506 12.5776C47.1339 13.299 44.9035 13.6755 42.6687 14.0528C40.3537 14.4436 38.034 14.8351 35.8314 15.6118C35.1549 15.2747 34.6187 15.5899 34.0827 15.9051C33.5534 16.2162 33.0242 16.5274 32.36 16.2106C31.7222 16.6138 31.0359 16.5636 30.3454 16.5131C29.9347 16.4831 29.5226 16.453 29.1182 16.518C27.7559 16.7343 26.3419 16.851 24.9694 16.7916C22.0927 16.6723 19.2269 16.4446 16.3709 16.1881C13.6188 15.9435 9.51599 14.5237 6.66619 12.7778C6.25024 12.5237 5.84301 12.2609 5.43604 11.9982L5.43603 11.9982C4.78009 11.5748 4.12478 11.1518 3.43456 10.7667C2.63749 10.3228 1.79895 9.92483 0.973541 9.53311L0.973449 9.53307C0.646851 9.37807 0.32231 9.22405 0.00320793 9.06854C-0.0701067 7.54561 1.1259 6.74141 2.2919 5.9574C2.54822 5.78505 2.80308 5.61368 3.04269 5.43586C3.79505 4.87699 4.62447 4.40291 5.45797 3.9265C6.51741 3.32094 7.58344 2.71162 8.50621 1.91959C9.35248 1.19419 11.0696 0.870245 12.3807 0.858699C13.1343 0.852555 13.8705 0.736144 14.599 0.62094C15.4369 0.488447 16.2646 0.357548 17.0973 0.397811C18.0591 0.440912 18.9914 0.32887 19.922 0.217042C20.4639 0.151918 21.0052 0.0868669 21.5513 0.0525717C21.6345 0.047086 21.7193 0.038183 21.8044 0.0292501C22.0228 0.00631542 22.2431 -0.0168162 22.4429 0.0171836C24.9314 0.454124 27.4713 0.590977 30.0133 0.72795C32.5609 0.865216 35.1106 1.0026 37.6131 1.44225C39.6212 1.79679 41.6148 2.19912 43.4232 2.86651C45.811 3.74854 48.2112 4.44715 50.7863 4.90009C51.8049 5.08097 52.802 5.32309 53.8013 5.56575C55.141 5.89108 56.4846 6.21736 57.8894 6.39827C58.6283 6.49535 59.2944 6.90213 59.9435 7.29847C60.2324 7.47491 60.518 7.64929 60.805 7.79335L60.8107 7.79297ZM3.28915 30.0373C3.60274 28.9966 3.85361 28.1575 4.12728 27.234C5.18207 26.6481 6.3794 26.5824 7.75917 26.5824C8.01675 26.5824 8.27446 26.5835 8.53228 26.5845H8.53263C10.7058 26.5929 12.8872 26.6014 15.0686 26.0105C17.2166 25.428 19.4581 25.1983 21.704 24.9682C24.0305 24.7298 26.3617 24.4909 28.5984 23.8589C29.2525 24.241 29.8041 23.9608 30.3557 23.6807C30.9002 23.4041 31.4447 23.1275 32.0877 23.4885C32.7456 23.127 33.4258 23.2225 34.1102 23.3187C34.5173 23.3758 34.9258 23.4332 35.3319 23.3948C36.7003 23.2682 38.1143 23.2448 39.477 23.3948C42.3334 23.7042 45.1728 24.1214 48.0008 24.5667C50.7261 24.9933 54.7286 26.6856 57.4654 28.6216C57.8649 28.9034 58.2552 29.1935 58.6453 29.4833C59.274 29.9505 59.902 30.4173 60.567 30.8483C61.335 31.3454 62.1469 31.7991 62.946 32.2458C63.2623 32.4225 63.5766 32.5982 63.8853 32.775C63.8713 34.3045 62.635 35.0306 61.4296 35.7385C61.1647 35.8942 60.9012 36.0489 60.6525 36.2111C59.8718 36.7209 59.0192 37.1408 58.1624 37.5627C57.0733 38.099 55.9774 38.6387 55.0137 39.3707C54.13 40.041 52.4024 40.252 51.0967 40.1769C50.3463 40.1333 49.6069 40.2013 48.8753 40.2685H48.8752C48.0337 40.3458 47.2023 40.4222 46.3758 40.327C45.421 40.2203 44.4867 40.2709 43.5541 40.3214H43.5541L43.554 40.3215C43.0109 40.3509 42.4685 40.3802 41.9229 40.3785C41.8398 40.3785 41.7549 40.3818 41.6697 40.3852C41.451 40.3937 41.2304 40.4023 41.0335 40.3551C38.5816 39.7534 36.0614 39.4487 33.539 39.1437C31.0113 38.8381 28.4813 38.5322 26.0156 37.9268C24.0371 37.4393 22.0758 36.9049 20.314 36.1173C17.9878 35.0767 15.6387 34.2188 13.1015 33.5953C12.098 33.347 11.1194 33.0388 10.1386 32.7299C8.82377 32.3157 7.50505 31.9004 6.11713 31.6265C5.38726 31.4805 4.74748 31.0293 4.12412 30.5897L4.12406 30.5896C3.84657 30.3939 3.57234 30.2005 3.29485 30.0373H3.28915ZM63.3213 57.831C63.5424 56.8939 63.7456 56.0424 64.0001 54.9861L63.9943 54.9865C63.7073 54.8424 63.4217 54.668 63.1328 54.4916C62.4838 54.0952 61.8176 53.6885 61.0788 53.5914C59.6739 53.4105 58.3303 53.0842 56.9906 52.7589C55.9913 52.5162 54.9942 52.2741 53.9756 52.0932C51.4005 51.6403 49.0003 50.9417 46.6125 50.0596C44.8042 49.3922 42.8105 48.9899 40.8024 48.6354C38.2999 48.1957 35.7502 48.0583 33.2026 47.9211C30.6606 47.7841 28.1207 47.6472 25.6322 47.2103C25.4324 47.1763 25.2121 47.1994 24.9937 47.2224C24.9086 47.2313 24.8238 47.2402 24.7406 47.2457C24.1945 47.28 23.6532 47.345 23.1113 47.4102C22.1807 47.522 21.2484 47.634 20.2866 47.5909C19.4539 47.5507 18.6262 47.6816 17.7883 47.8141C17.0598 47.9293 16.3236 48.0457 15.57 48.0518C14.2589 48.0634 12.5418 48.3873 11.6955 49.1127C10.7728 49.9047 9.70672 50.5141 8.64727 51.1196C7.81378 51.596 6.98436 52.0701 6.23201 52.629C5.9924 52.8068 5.73753 52.9782 5.48122 53.1505C4.31522 53.9345 3.11921 54.7387 3.19252 56.2617C3.51166 56.4172 3.83624 56.5712 4.16287 56.7262C4.98827 57.1179 5.82681 57.5159 6.62388 57.9598C7.3141 58.3449 7.96941 58.7679 8.62535 59.1913C9.03233 59.454 9.43955 59.7168 9.8555 59.9709C12.7053 61.7168 16.8081 63.1366 19.5603 63.3812C22.4162 63.6377 25.282 63.8654 28.1588 63.9848C29.5312 64.0441 30.9452 63.9274 32.3076 63.7112C32.7119 63.6461 33.124 63.6762 33.5347 63.7062C34.2252 63.7567 34.9116 63.8069 35.5493 63.4037C36.2135 63.7205 36.7427 63.4094 37.272 63.0982C37.8081 62.783 38.3442 62.4678 39.0207 62.8049C41.2233 62.0283 43.543 61.6367 45.858 61.2459C48.0928 60.8687 50.3232 60.4921 52.4399 59.7707C54.5895 59.0387 56.7733 58.9032 58.949 58.7681C59.2072 58.7521 59.4654 58.7361 59.7233 58.7191C61.1043 58.628 62.299 58.4837 63.3213 57.831Z" fill="currentcolor"></path>
                        </svg></div>
                    </div>
                </div>
            </div>
        </>
    );

}

export default SideBar;